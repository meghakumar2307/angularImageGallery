{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Output, Input, Injectable, ContentChildren, ContentChild, HostListener, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\n\nfunction Ng2DropdownButton_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 4);\n    i0.ɵɵelement(2, \"path\", 5)(3, \"g\")(4, \"g\")(5, \"g\")(6, \"g\")(7, \"g\")(8, \"g\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nconst _c0 = [\"*\"];\n\nfunction Ng2DropdownMenu_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵlistener(\"click\", function Ng2DropdownMenu_div_3_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.hide();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c1 = [[[\"ng2-dropdown-button\"]], [[\"ng2-dropdown-menu\"]]];\nconst _c2 = [\"ng2-dropdown-button\", \"ng2-dropdown-menu\"];\n\nclass Ng2DropdownButton {\n  constructor(element) {\n    this.element = element;\n    this.onMenuToggled = new EventEmitter();\n    this.showCaret = true;\n  }\n  /**\n   * @name toggleMenu\n   * @desc emits event to toggle menu\n   */\n\n\n  toggleMenu() {\n    this.onMenuToggled.emit(true);\n  }\n  /**\n   * @name getPosition\n   * @desc returns position of the button\n   */\n\n\n  getPosition() {\n    return this.element.nativeElement.getBoundingClientRect();\n  }\n\n}\n\nNg2DropdownButton.ɵfac = function Ng2DropdownButton_Factory(t) {\n  return new (t || Ng2DropdownButton)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNg2DropdownButton.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Ng2DropdownButton,\n  selectors: [[\"ng2-dropdown-button\"]],\n  inputs: {\n    showCaret: \"showCaret\"\n  },\n  outputs: {\n    onMenuToggled: \"onMenuToggled\"\n  },\n  ngContentSelectors: _c0,\n  decls: 4,\n  vars: 1,\n  consts: [[\"type\", \"button\", \"tabindex\", \"0s\", 1, \"ng2-dropdown-button\", 3, \"click\"], [1, \"ng2-dropdown-button__label\"], [\"class\", \"ng2-dropdown-button__caret\", 4, \"ngIf\"], [1, \"ng2-dropdown-button__caret\"], [\"enable-background\", \"new 0 0 32 32\", \"height\", \"16px\", \"id\", \"\\u0421\\u043B\\u043E\\u0439_1\", \"version\", \"1.1\", \"viewBox\", \"0 0 32 32\", \"width\", \"16px\", 0, \"xml\", \"space\", \"preserve\", \"xmlns\", \"http://www.w3.org/2000/svg\", 0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\"], [\"d\", \"M24.285,11.284L16,19.571l-8.285-8.288c-0.395-0.395-1.034-0.395-1.429,0  c-0.394,0.395-0.394,1.035,0,1.43l8.999,9.002l0,0l0,0c0.394,0.395,1.034,0.395,1.428,0l8.999-9.002  c0.394-0.395,0.394-1.036,0-1.431C25.319,10.889,24.679,10.889,24.285,11.284z\", \"fill\", \"#121313\", \"id\", \"Expand_More\"]],\n  template: function Ng2DropdownButton_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function Ng2DropdownButton_Template_button_click_0_listener() {\n        return ctx.toggleMenu();\n      });\n      i0.ɵɵelementStart(1, \"span\", 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, Ng2DropdownButton_span_3_Template, 9, 0, \"span\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.showCaret);\n    }\n  },\n  directives: [i1.NgIf],\n  styles: [\".ng2-dropdown-button[_ngcontent-%COMP%]{font-family:Roboto,Helvetica Neue,Helvetica,Arial;background:#fff;padding:.45rem .25rem;font-size:14px;letter-spacing:.08rem;color:#444;outline:0;cursor:pointer;font-weight:400;border:none;border-bottom:1px solid #efefef;text-align:left;min-width:100px;width:100%;display:flex;flex-direction:row;max-width:150px}.ng2-dropdown-button[_ngcontent-%COMP%]:hover{color:#222}.ng2-dropdown-button[_ngcontent-%COMP%]:active, .ng2-dropdown-button[_ngcontent-%COMP%]:focus{color:#222;border-bottom:2px solid #2196F3}.ng2-dropdown-button__label[_ngcontent-%COMP%]{flex:1 1 95%}.ng2-dropdown-button__caret[_ngcontent-%COMP%]{width:12px;height:12px;display:flex;flex:1 1 6%}.ng2-dropdown-button--icon[_nghost-%COMP%]   .ng2-dropdown-button[_ngcontent-%COMP%], .ng2-dropdown-button--icon   [_nghost-%COMP%]   .ng2-dropdown-button[_ngcontent-%COMP%]{border:none;min-width:40px;width:40px;border-radius:100%;transition:all .2s;text-align:center;height:40px;padding:.5em}.ng2-dropdown-button--icon[_nghost-%COMP%]   .ng2-dropdown-button[_ngcontent-%COMP%]:active, .ng2-dropdown-button--icon   [_nghost-%COMP%]   .ng2-dropdown-button[_ngcontent-%COMP%]:active{background:rgba(0,0,0,.2)}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2DropdownButton, [{\n    type: Component,\n    args: [{\n      selector: 'ng2-dropdown-button',\n      template: \"<button class='ng2-dropdown-button' type=\\\"button\\\" (click)=\\\"toggleMenu()\\\" tabindex=\\\"0s\\\">\\n    <span class=\\\"ng2-dropdown-button__label\\\">\\n        <ng-content></ng-content>\\n    </span>\\n\\n    <span class=\\\"ng2-dropdown-button__caret\\\" *ngIf=\\\"showCaret\\\">\\n        <svg enable-background=\\\"new 0 0 32 32\\\" height=\\\"16px\\\" id=\\\"\\u0421\\u043B\\u043E\\u0439_1\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 32 32\\\" width=\\\"16px\\\" xml:space=\\\"preserve\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><path d=\\\"M24.285,11.284L16,19.571l-8.285-8.288c-0.395-0.395-1.034-0.395-1.429,0  c-0.394,0.395-0.394,1.035,0,1.43l8.999,9.002l0,0l0,0c0.394,0.395,1.034,0.395,1.428,0l8.999-9.002  c0.394-0.395,0.394-1.036,0-1.431C25.319,10.889,24.679,10.889,24.285,11.284z\\\" fill=\\\"#121313\\\" id=\\\"Expand_More\\\"/><g/><g/><g/><g/><g/><g/></svg>\\n    </span>\\n</button>\\n\",\n      styles: [\".ng2-dropdown-button{font-family:Roboto,Helvetica Neue,Helvetica,Arial;background:#fff;padding:.45rem .25rem;font-size:14px;letter-spacing:.08rem;color:#444;outline:0;cursor:pointer;font-weight:400;border:none;border-bottom:1px solid #efefef;text-align:left;min-width:100px;width:100%;display:flex;flex-direction:row;max-width:150px}.ng2-dropdown-button:hover{color:#222}.ng2-dropdown-button:active,.ng2-dropdown-button:focus{color:#222;border-bottom:2px solid #2196F3}.ng2-dropdown-button__label{flex:1 1 95%}.ng2-dropdown-button__caret{width:12px;height:12px;display:flex;flex:1 1 6%}:host-context(.ng2-dropdown-button--icon) .ng2-dropdown-button{border:none;min-width:40px;width:40px;border-radius:100%;transition:all .2s;text-align:center;height:40px;padding:.5em}:host-context(.ng2-dropdown-button--icon) .ng2-dropdown-button:active{background:rgba(0,0,0,.2)}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    onMenuToggled: [{\n      type: Output\n    }],\n    showCaret: [{\n      type: Input\n    }]\n  });\n})();\n\nconst KEYS = {\n  BACKSPACE: 9,\n  PREV: 38,\n  NEXT: 40,\n  ENTER: 13,\n  ESCAPE: 27\n};\n/**\n * @name onSwitchNext\n * @param index\n * @param items\n * @param state\n */\n\nconst onSwitchNext = (index, items, state) => {\n  if (index < items.length - 1) {\n    state.select(items[index + 1], true);\n  }\n};\n/**\n * @name onSwitchPrev\n * @param index\n * @param items\n * @param state\n */\n\n\nconst onSwitchPrev = (index, items, state) => {\n  if (index > 0) {\n    state.select(items[index - 1], true);\n  }\n};\n/**\n * @name onBackspace\n * @param index\n * @param items\n * @param state\n */\n\n\nconst onBackspace = (index, items, state) => {\n  if (index < items.length - 1) {\n    state.select(items[index + 1], true);\n  } else {\n    state.select(items[0], true);\n  }\n};\n\nfunction onEscape() {\n  this.hide();\n}\n\n;\n/**\n * @name onItemClicked\n * @param index\n * @param items\n * @param state\n */\n\nconst onItemClicked = (index, items, state) => {\n  return state.selectedItem ? state.selectedItem.click() : undefined;\n};\n\nconst ACTIONS = {\n  [KEYS.BACKSPACE]: onBackspace,\n  [KEYS.PREV]: onSwitchPrev,\n  [KEYS.NEXT]: onSwitchNext,\n  [KEYS.ENTER]: onItemClicked,\n  [KEYS.ESCAPE]: onEscape\n};\n\nfunction arrowKeysHandler(event) {\n  if ([38, 40].indexOf(event.keyCode) > -1) {\n    event.preventDefault();\n  }\n}\n\nclass Ng2DropdownState {\n  constructor() {\n    this.onItemSelected = new EventEmitter();\n    this.onItemClicked = new EventEmitter();\n    this.onItemDestroyed = new EventEmitter();\n  }\n  /**\n   * @name selectedItem\n   * @desc getter for _selectedItem\n   */\n\n\n  get selectedItem() {\n    return this._selectedItem;\n  }\n  /**\n   * @name selects a menu item and emits event\n   * @param item\n   */\n\n\n  select(item, dispatchEvent = true) {\n    this._selectedItem = item;\n\n    if (!dispatchEvent || !item) {\n      return;\n    }\n\n    item.focus();\n    this.onItemSelected.emit(item);\n  }\n  /**\n   * @name unselect\n   * @desc sets _selectedItem as undefined\n   */\n\n\n  unselect() {\n    this._selectedItem = undefined;\n  }\n\n}\n\nclass DropdownStateService {\n  constructor() {\n    this.menuState = {\n      isVisible: false,\n\n      toString() {\n        return this.isVisible === true ? 'visible' : 'hidden';\n      }\n\n    };\n    this.dropdownState = new Ng2DropdownState();\n  }\n\n}\n\nDropdownStateService.ɵfac = function DropdownStateService_Factory(t) {\n  return new (t || DropdownStateService)();\n};\n\nDropdownStateService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DropdownStateService,\n  factory: DropdownStateService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownStateService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nclass Ng2MenuItem {\n  constructor(state, element) {\n    this.state = state;\n    this.element = element;\n    /**\n     * @preventClose\n     * @desc if true, clicking on the item won't close the dropdown\n     */\n\n    this.preventClose = false;\n  }\n\n  ngOnDestroy() {\n    this.state.dropdownState.onItemDestroyed.emit(this);\n  }\n  /**\n   * @name isSelected\n   * @desc returns current selected item\n   */\n\n\n  get isSelected() {\n    return this === this.state.dropdownState.selectedItem;\n  }\n  /**\n   * @name click\n   * @desc emits select event\n   */\n\n\n  select($event) {\n    this.state.dropdownState.select(this, true);\n\n    if ($event) {\n      $event.stopPropagation();\n      $event.preventDefault();\n    }\n  }\n  /**\n   * @name click\n   * @desc emits click event\n   */\n\n\n  click() {\n    this.state.dropdownState.onItemClicked.emit(this);\n  }\n  /**\n   * @name focus\n   */\n\n\n  focus() {\n    this.element.nativeElement.children[0].focus();\n  }\n\n}\n\nNg2MenuItem.ɵfac = function Ng2MenuItem_Factory(t) {\n  return new (t || Ng2MenuItem)(i0.ɵɵdirectiveInject(DropdownStateService), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNg2MenuItem.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Ng2MenuItem,\n  selectors: [[\"ng2-menu-item\"]],\n  inputs: {\n    preventClose: \"preventClose\",\n    value: \"value\"\n  },\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 2,\n  consts: [[\"role\", \"button\", \"tabindex\", \"0\", 1, \"ng2-menu-item\", 3, \"keydown.enter\", \"click\", \"mouseover\"]],\n  template: function Ng2MenuItem_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"keydown.enter\", function Ng2MenuItem_Template_div_keydown_enter_0_listener() {\n        return ctx.click();\n      })(\"click\", function Ng2MenuItem_Template_div_click_0_listener() {\n        return ctx.click();\n      })(\"mouseover\", function Ng2MenuItem_Template_div_mouseover_0_listener() {\n        return ctx.select();\n      });\n      i0.ɵɵprojection(1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ng2-menu-item--selected\", ctx.isSelected);\n    }\n  },\n  styles: [\".ng2-menu-item[_ngcontent-%COMP%]{font-family:Roboto,Helvetica Neue,Helvetica,Arial;background:#fff;color:#000000de;cursor:pointer;font-size:.9em;text-transform:none;font-weight:400;letter-spacing:.03em;height:48px;line-height:48px;padding:.3em 1.25rem;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;transition:background .25s}.ng2-menu-item--selected[_ngcontent-%COMP%]{background:rgba(158,158,158,.2);outline:0}.ng2-menu-item[_ngcontent-%COMP%]:focus{outline:0}.ng2-menu-item[_ngcontent-%COMP%]:active{background:rgba(158,158,158,.4)}ng2-menu-item[_nghost-%COMP%]     [ng2-menu-item-icon]{vertical-align:middle;font-size:28px;width:1.5em;height:30px;color:#00000070}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2MenuItem, [{\n    type: Component,\n    args: [{\n      selector: 'ng2-menu-item',\n      template: `\n        <div\n            class=\"ng2-menu-item\"\n            role=\"button\"\n            tabindex=\"0\"\n            [class.ng2-menu-item--selected]=\"isSelected\"\n            (keydown.enter)=\"click()\"\n            (click)=\"click()\"\n            (mouseover)=\"select()\"\n        >\n            <ng-content></ng-content>\n        </div>\n    `,\n      styles: [\".ng2-menu-item{font-family:Roboto,Helvetica Neue,Helvetica,Arial;background:#fff;color:#000000de;cursor:pointer;font-size:.9em;text-transform:none;font-weight:400;letter-spacing:.03em;height:48px;line-height:48px;padding:.3em 1.25rem;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;transition:background .25s}.ng2-menu-item--selected{background:rgba(158,158,158,.2);outline:0}.ng2-menu-item:focus{outline:0}.ng2-menu-item:active{background:rgba(158,158,158,.4)}:host(ng2-menu-item) ::ng-deep [ng2-menu-item-icon]{vertical-align:middle;font-size:28px;width:1.5em;height:30px;color:#00000070}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: DropdownStateService\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    preventClose: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\n\nclass Ng2DropdownMenu {\n  constructor(dropdownState, element, renderer) {\n    this.dropdownState = dropdownState;\n    this.element = element;\n    this.renderer = renderer;\n    /**\n     * @name width\n     */\n\n    this.width = 4;\n    /**\n     * @description if set to true, the first element of the dropdown will be automatically focused\n     * @name focusFirstElement\n     */\n\n    this.focusFirstElement = true;\n    /**\n     * @name appendToBody\n     */\n\n    this.appendToBody = true;\n    /**\n     * @name zIndex\n     */\n\n    this.zIndex = 1000;\n    this.listeners = {\n      arrowHandler: undefined,\n      handleKeypress: undefined\n    };\n  }\n  /**\n   * @name show\n   * @shows menu and selects first item\n   */\n\n\n  show(position, dynamic = true) {\n    const dc = typeof document !== 'undefined' ? document : undefined;\n    const wd = typeof window !== 'undefined' ? window : undefined;\n\n    if (!this.dropdownState.menuState.isVisible) {\n      // setting handlers\n      this.listeners.handleKeypress = this.renderer.listen(dc.body, 'keydown', this.handleKeypress.bind(this));\n      this.listeners.arrowHandler = this.renderer.listen(wd, 'keydown', arrowKeysHandler);\n    } // update state\n\n\n    this.dropdownState.menuState.isVisible = true;\n\n    if (position) {\n      this.updatePosition(position, dynamic);\n    }\n  }\n  /**\n   * @name hide\n   * @desc hides menu\n   */\n\n\n  hide() {\n    this.dropdownState.menuState.isVisible = false; // reset selected item state\n\n    this.dropdownState.dropdownState.unselect(); // call function to unlisten\n\n    this.listeners.arrowHandler && this.listeners.arrowHandler();\n    this.listeners.handleKeypress && this.listeners.handleKeypress();\n  }\n  /**\n   * @name updatePosition\n   * @desc updates the menu position every time it is toggled\n   * @param position {ClientRect}\n   * @param dynamic {boolean}\n   */\n\n\n  updatePosition(position, dynamic) {\n    this.position = position;\n    this.updateOnChange(dynamic);\n  }\n  /**\n   * @name handleKeypress\n   * @desc executes functions on keyPress based on the key pressed\n   * @param $event\n   */\n\n\n  handleKeypress($event) {\n    const key = $event.keyCode;\n    const items = this.items.toArray();\n    const index = items.indexOf(this.dropdownState.dropdownState.selectedItem);\n\n    if (!ACTIONS.hasOwnProperty(key)) {\n      return;\n    }\n\n    ACTIONS[key].call(this, index, items, this.dropdownState.dropdownState);\n  }\n  /**\n   * @name getMenuElement\n   */\n\n\n  getMenuElement() {\n    return this.element.nativeElement.children[0];\n  }\n  /**\n   * @name calcPositionOffset\n   * @param position\n   */\n\n\n  calcPositionOffset(position) {\n    const wd = typeof window !== 'undefined' ? window : undefined;\n    const dc = typeof document !== 'undefined' ? document : undefined;\n\n    if (!wd || !dc || !position) {\n      return;\n    }\n\n    const element = this.getMenuElement();\n    const supportPageOffset = wd.pageXOffset !== undefined;\n    const isCSS1Compat = (dc.compatMode || '') === 'CSS1Compat';\n    const x = supportPageOffset ? wd.pageXOffset : isCSS1Compat ? dc.documentElement.scrollLeft : dc.body.scrollLeft;\n    const y = supportPageOffset ? wd.pageYOffset : isCSS1Compat ? dc.documentElement.scrollTop : dc.body.scrollTop;\n    let {\n      top,\n      left\n    } = this.applyOffset(`${position.top + (this.appendToBody ? y - 15 : 0)}px`, `${position.left + x - 5}px`);\n    const clientWidth = element.clientWidth;\n    const clientHeight = element.clientHeight;\n    const marginFromBottom = parseInt(top) + clientHeight + (this.appendToBody ? 0 : y - 15);\n    const marginFromRight = parseInt(left) + clientWidth;\n    const windowScrollHeight = wd.innerHeight + wd.scrollY;\n    const windowScrollWidth = wd.innerWidth + wd.scrollX;\n\n    if (marginFromBottom >= windowScrollHeight) {\n      top = `${parseInt(top.replace('px', '')) - clientHeight}px`;\n    }\n\n    if (marginFromRight >= windowScrollWidth) {\n      const marginRight = marginFromRight - windowScrollWidth + 30;\n      left = `${parseInt(left.replace('px', '')) - marginRight}px`;\n    }\n\n    return {\n      top,\n      left\n    };\n  }\n\n  applyOffset(top, left) {\n    if (!this.offset) {\n      return {\n        top,\n        left\n      };\n    }\n\n    const offset = this.offset.split(' ');\n\n    if (!offset[1]) {\n      offset[1] = '0';\n    }\n\n    top = `${parseInt(top.replace('px', '')) + parseInt(offset[0])}px`;\n    left = `${parseInt(left.replace('px', '')) + parseInt(offset[1])}px`;\n    return {\n      top,\n      left\n    };\n  }\n\n  ngOnInit() {\n    const dc = typeof document !== 'undefined' ? document : undefined;\n\n    if (this.appendToBody) {\n      // append menu element to the body\n      dc.body.appendChild(this.element.nativeElement);\n    }\n  }\n\n  updateOnChange(dynamic = true) {\n    const element = this.getMenuElement();\n    const position = this.calcPositionOffset(this.position);\n\n    if (position) {\n      this.renderer.setStyle(element, 'top', position.top.toString());\n      this.renderer.setStyle(element, 'left', position.left.toString());\n    } // select first item unless user disabled this option\n\n\n    if (this.focusFirstElement && this.items.first && !this.dropdownState.dropdownState.selectedItem) {\n      this.dropdownState.dropdownState.select(this.items.first, false);\n    }\n  }\n\n  ngOnDestroy() {\n    const elem = this.element.nativeElement;\n    elem.parentNode.removeChild(elem);\n\n    if (this.listeners.handleKeypress) {\n      this.listeners.handleKeypress();\n    }\n  }\n\n}\n\nNg2DropdownMenu.ɵfac = function Ng2DropdownMenu_Factory(t) {\n  return new (t || Ng2DropdownMenu)(i0.ɵɵdirectiveInject(DropdownStateService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nNg2DropdownMenu.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Ng2DropdownMenu,\n  selectors: [[\"ng2-dropdown-menu\"]],\n  contentQueries: function Ng2DropdownMenu_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, Ng2MenuItem, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n    }\n  },\n  inputs: {\n    width: \"width\",\n    focusFirstElement: \"focusFirstElement\",\n    offset: \"offset\",\n    appendToBody: \"appendToBody\",\n    zIndex: \"zIndex\"\n  },\n  ngContentSelectors: _c0,\n  decls: 4,\n  vars: 12,\n  consts: [[1, \"ng2-dropdown-menu__options-container\"], [\"class\", \"ng2-dropdown-backdrop\", 3, \"click\", 4, \"ngIf\"], [1, \"ng2-dropdown-backdrop\", 3, \"click\"]],\n  template: function Ng2DropdownMenu_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(3, Ng2DropdownMenu_div_3_Template, 1, 0, \"div\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMapInterpolate1(\"ng2-dropdown-menu ng2-dropdown-menu---width--\", ctx.width, \"\");\n      i0.ɵɵstyleProp(\"z-index\", ctx.zIndex);\n      i0.ɵɵclassProp(\"ng2-dropdown-menu--inside-element\", !ctx.appendToBody)(\"ng2-dropdown-menu--open\", ctx.dropdownState.menuState.isVisible);\n      i0.ɵɵproperty(\"@fade\", ctx.dropdownState.menuState.toString());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"@opacity\", ctx.dropdownState.menuState.toString());\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.dropdownState.menuState.isVisible);\n    }\n  },\n  directives: [i1.NgIf],\n  styles: [\"[_nghost-%COMP%]{display:block}.ng2-dropdown-menu[_ngcontent-%COMP%]{overflow-y:auto;box-shadow:0 1px 2px #0000004d;position:absolute;padding:.5em 0;background:#fff;border-radius:1px;max-height:400px;width:260px;min-height:0;display:block}.ng2-dropdown-menu.ng2-dropdown-menu--inside-element[_ngcontent-%COMP%]{position:fixed}.ng2-dropdown-menu.ng2-dropdown-menu--width--2[_ngcontent-%COMP%]{width:200px}.ng2-dropdown-menu.ng2-dropdown-menu--width--4[_ngcontent-%COMP%]{width:260px}.ng2-dropdown-menu.ng2-dropdown-menu--width--6[_ngcontent-%COMP%]{width:320px}.ng2-dropdown-backdrop[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;z-index:1;overflow:hidden}[_nghost-%COMP%]     .ng2-menu-divider{height:1px;min-height:1px;max-height:1px;width:100%;display:block;background:#f9f9f9}\"],\n  data: {\n    animation: [trigger('fade', [state('visible', style({\n      opacity: 1,\n      height: '*',\n      width: '*'\n    })), state('hidden', style({\n      opacity: 0,\n      overflow: 'hidden',\n      height: 0,\n      width: 0\n    })), transition('hidden => visible', [animate('250ms ease-in', style({\n      opacity: 1,\n      height: '*',\n      width: '*'\n    }))]), transition('visible => hidden', [animate('350ms ease-out', style({\n      opacity: 0,\n      width: 0,\n      height: 0\n    }))])]), trigger('opacity', [transition('hidden => visible', [animate('450ms ease-in', keyframes([style({\n      opacity: 0,\n      offset: 0\n    }), style({\n      opacity: 1,\n      offset: 1\n    })]))]), transition('visible => hidden', [animate('250ms ease-out', keyframes([style({\n      opacity: 1,\n      offset: 0\n    }), style({\n      opacity: 0.5,\n      offset: 0.3\n    }), style({\n      opacity: 0,\n      offset: 1\n    })]))])])]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2DropdownMenu, [{\n    type: Component,\n    args: [{\n      selector: 'ng2-dropdown-menu',\n      template: `\n        <!-- MENU -->\n        <div\n            class=\"ng2-dropdown-menu ng2-dropdown-menu---width--{{ width }}\"\n            [class.ng2-dropdown-menu--inside-element]=\"!appendToBody\"\n            [class.ng2-dropdown-menu--open]=\"dropdownState.menuState.isVisible\"\n            [style.z-index]=\"zIndex\"\n            [@fade]=\"dropdownState.menuState.toString()\"\n        >\n            <div\n                class=\"ng2-dropdown-menu__options-container\"\n                [@opacity]=\"dropdownState.menuState.toString()\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n\n        <!-- BACKDROP -->\n        <div\n            class=\"ng2-dropdown-backdrop\"\n            *ngIf=\"dropdownState.menuState.isVisible\"\n            (click)=\"hide()\"\n        ></div>\n    `,\n      animations: [trigger('fade', [state('visible', style({\n        opacity: 1,\n        height: '*',\n        width: '*'\n      })), state('hidden', style({\n        opacity: 0,\n        overflow: 'hidden',\n        height: 0,\n        width: 0\n      })), transition('hidden => visible', [animate('250ms ease-in', style({\n        opacity: 1,\n        height: '*',\n        width: '*'\n      }))]), transition('visible => hidden', [animate('350ms ease-out', style({\n        opacity: 0,\n        width: 0,\n        height: 0\n      }))])]), trigger('opacity', [transition('hidden => visible', [animate('450ms ease-in', keyframes([style({\n        opacity: 0,\n        offset: 0\n      }), style({\n        opacity: 1,\n        offset: 1\n      })]))]), transition('visible => hidden', [animate('250ms ease-out', keyframes([style({\n        opacity: 1,\n        offset: 0\n      }), style({\n        opacity: 0.5,\n        offset: 0.3\n      }), style({\n        opacity: 0,\n        offset: 1\n      })]))])])],\n      styles: [\":host{display:block}.ng2-dropdown-menu{overflow-y:auto;box-shadow:0 1px 2px #0000004d;position:absolute;padding:.5em 0;background:#fff;border-radius:1px;max-height:400px;width:260px;min-height:0;display:block}.ng2-dropdown-menu.ng2-dropdown-menu--inside-element{position:fixed}.ng2-dropdown-menu.ng2-dropdown-menu--width--2{width:200px}.ng2-dropdown-menu.ng2-dropdown-menu--width--4{width:260px}.ng2-dropdown-menu.ng2-dropdown-menu--width--6{width:320px}.ng2-dropdown-backdrop{position:fixed;top:0;left:0;width:100%;height:100%;z-index:1;overflow:hidden}:host ::ng-deep .ng2-menu-divider{height:1px;min-height:1px;max-height:1px;width:100%;display:block;background:#f9f9f9}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: DropdownStateService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    width: [{\n      type: Input\n    }],\n    focusFirstElement: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    appendToBody: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    items: [{\n      type: ContentChildren,\n      args: [Ng2MenuItem, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n\nclass Ng2Dropdown {\n  constructor(state) {\n    this.state = state;\n    this.dynamicUpdate = true; // outputs\n\n    this.onItemClicked = new EventEmitter();\n    this.onItemSelected = new EventEmitter();\n    this.onShow = new EventEmitter();\n    this.onHide = new EventEmitter();\n  }\n\n  ngOnInit() {\n    this.state.dropdownState.onItemClicked.subscribe(item => {\n      this.onItemClicked.emit(item);\n\n      if (item.preventClose) {\n        return;\n      }\n\n      this.hide.call(this);\n    });\n\n    if (this.button) {\n      this.button.onMenuToggled.subscribe(() => {\n        this.toggleMenu();\n      });\n    }\n\n    this.state.dropdownState.onItemSelected.subscribe(item => {\n      this.onItemSelected.emit(item);\n    });\n    this.state.dropdownState.onItemDestroyed.subscribe(item => {\n      let newSelectedItem;\n      const items = this.menu.items.toArray();\n\n      if (item !== this.state.dropdownState.selectedItem) {\n        return;\n      }\n\n      if (this.menu.focusFirstElement) {\n        newSelectedItem = item === items[0] && items.length > 1 ? items[1] : items[0];\n      }\n\n      this.state.dropdownState.select(newSelectedItem);\n    });\n  }\n  /**\n   * @name toggleMenu\n   * @desc toggles menu visibility\n   */\n\n\n  toggleMenu(position = this.button.getPosition()) {\n    this.state.menuState.isVisible ? this.hide() : this.show(position);\n  }\n  /**\n   * - hides dropdown\n   * @name hide\n   */\n\n\n  hide() {\n    this.menu.hide();\n    this.onHide.emit(this);\n  }\n  /**\n   * - shows dropdown\n   * @name show\n   * @param position\n   */\n\n\n  show(position = this.button.getPosition()) {\n    this.menu.show(position, this.dynamicUpdate);\n    this.onShow.emit(this);\n  }\n  /**\n   * @name scrollListener\n   */\n\n\n  scrollListener() {\n    if (this.button && this.dynamicUpdate) {\n      this.menu.updatePosition(this.button.getPosition(), true);\n    }\n  }\n\n}\n\nNg2Dropdown.ɵfac = function Ng2Dropdown_Factory(t) {\n  return new (t || Ng2Dropdown)(i0.ɵɵdirectiveInject(DropdownStateService));\n};\n\nNg2Dropdown.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Ng2Dropdown,\n  selectors: [[\"ng2-dropdown\"]],\n  contentQueries: function Ng2Dropdown_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, Ng2DropdownButton, 7);\n      i0.ɵɵcontentQuery(dirIndex, Ng2DropdownMenu, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.button = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menu = _t.first);\n    }\n  },\n  hostBindings: function Ng2Dropdown_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"scroll\", function Ng2Dropdown_scroll_HostBindingHandler() {\n        return ctx.scrollListener();\n      }, false, i0.ɵɵresolveWindow);\n    }\n  },\n  inputs: {\n    dynamicUpdate: \"dynamicUpdate\"\n  },\n  outputs: {\n    onItemClicked: \"onItemClicked\",\n    onItemSelected: \"onItemSelected\",\n    onShow: \"onShow\",\n    onHide: \"onHide\"\n  },\n  features: [i0.ɵɵProvidersFeature([DropdownStateService])],\n  ngContentSelectors: _c2,\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"ng2-dropdown-container\"]],\n  template: function Ng2Dropdown_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c1);\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵprojection(2, 1);\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2Dropdown, [{\n    type: Component,\n    args: [{\n      selector: 'ng2-dropdown',\n      template: `\n        <div class=\"ng2-dropdown-container\">\n            <ng-content select=\"ng2-dropdown-button\"></ng-content>\n            <ng-content select=\"ng2-dropdown-menu\"></ng-content>\n        </div>\n    `,\n      providers: [DropdownStateService]\n    }]\n  }], function () {\n    return [{\n      type: DropdownStateService\n    }];\n  }, {\n    button: [{\n      type: ContentChild,\n      args: [Ng2DropdownButton, {\n        static: true\n      }]\n    }],\n    menu: [{\n      type: ContentChild,\n      args: [Ng2DropdownMenu, {\n        static: true\n      }]\n    }],\n    dynamicUpdate: [{\n      type: Input\n    }],\n    onItemClicked: [{\n      type: Output\n    }],\n    onItemSelected: [{\n      type: Output\n    }],\n    onShow: [{\n      type: Output\n    }],\n    onHide: [{\n      type: Output\n    }],\n    scrollListener: [{\n      type: HostListener,\n      args: ['window:scroll']\n    }]\n  });\n})();\n\nclass Ng2DropdownModule {}\n\nNg2DropdownModule.ɵfac = function Ng2DropdownModule_Factory(t) {\n  return new (t || Ng2DropdownModule)();\n};\n\nNg2DropdownModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: Ng2DropdownModule\n});\nNg2DropdownModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2DropdownModule, [{\n    type: NgModule,\n    args: [{\n      exports: [Ng2MenuItem, Ng2DropdownButton, Ng2DropdownMenu, Ng2Dropdown],\n      declarations: [Ng2Dropdown, Ng2MenuItem, Ng2DropdownButton, Ng2DropdownMenu],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DropdownStateService, Ng2Dropdown, Ng2DropdownButton, Ng2DropdownMenu, Ng2DropdownModule, Ng2MenuItem };","map":{"version":3,"sources":["D:/angularImageGallery/node_modules/ng2-material-dropdown/fesm2015/ng2-material-dropdown.mjs"],"names":["i0","EventEmitter","Component","Output","Input","Injectable","ContentChildren","ContentChild","HostListener","NgModule","i1","CommonModule","trigger","state","style","transition","animate","keyframes","Ng2DropdownButton","constructor","element","onMenuToggled","showCaret","toggleMenu","emit","getPosition","nativeElement","getBoundingClientRect","ɵfac","ElementRef","ɵcmp","NgIf","type","args","selector","template","styles","KEYS","BACKSPACE","PREV","NEXT","ENTER","ESCAPE","onSwitchNext","index","items","length","select","onSwitchPrev","onBackspace","onEscape","hide","onItemClicked","selectedItem","click","undefined","ACTIONS","arrowKeysHandler","event","indexOf","keyCode","preventDefault","Ng2DropdownState","onItemSelected","onItemDestroyed","_selectedItem","item","dispatchEvent","focus","unselect","DropdownStateService","menuState","isVisible","toString","dropdownState","ɵprov","Ng2MenuItem","preventClose","ngOnDestroy","isSelected","$event","stopPropagation","children","value","Ng2DropdownMenu","renderer","width","focusFirstElement","appendToBody","zIndex","listeners","arrowHandler","handleKeypress","show","position","dynamic","dc","document","wd","window","listen","body","bind","updatePosition","updateOnChange","key","toArray","hasOwnProperty","call","getMenuElement","calcPositionOffset","supportPageOffset","pageXOffset","isCSS1Compat","compatMode","x","documentElement","scrollLeft","y","pageYOffset","scrollTop","top","left","applyOffset","clientWidth","clientHeight","marginFromBottom","parseInt","marginFromRight","windowScrollHeight","innerHeight","scrollY","windowScrollWidth","innerWidth","scrollX","replace","marginRight","offset","split","ngOnInit","appendChild","setStyle","first","elem","parentNode","removeChild","Renderer2","opacity","height","overflow","animations","descendants","Ng2Dropdown","dynamicUpdate","onShow","onHide","subscribe","button","newSelectedItem","menu","scrollListener","providers","static","Ng2DropdownModule","ɵmod","ɵinj","exports","declarations","imports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Output, Input, Injectable, ContentChildren, ContentChild, HostListener, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\n\nclass Ng2DropdownButton {\n    constructor(element) {\n        this.element = element;\n        this.onMenuToggled = new EventEmitter();\n        this.showCaret = true;\n    }\n    /**\n     * @name toggleMenu\n     * @desc emits event to toggle menu\n     */\n    toggleMenu() {\n        this.onMenuToggled.emit(true);\n    }\n    /**\n     * @name getPosition\n     * @desc returns position of the button\n     */\n    getPosition() {\n        return this.element.nativeElement.getBoundingClientRect();\n    }\n}\nNg2DropdownButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2DropdownButton, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nNg2DropdownButton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: Ng2DropdownButton, selector: \"ng2-dropdown-button\", inputs: { showCaret: \"showCaret\" }, outputs: { onMenuToggled: \"onMenuToggled\" }, ngImport: i0, template: \"<button class='ng2-dropdown-button' type=\\\"button\\\" (click)=\\\"toggleMenu()\\\" tabindex=\\\"0s\\\">\\n    <span class=\\\"ng2-dropdown-button__label\\\">\\n        <ng-content></ng-content>\\n    </span>\\n\\n    <span class=\\\"ng2-dropdown-button__caret\\\" *ngIf=\\\"showCaret\\\">\\n        <svg enable-background=\\\"new 0 0 32 32\\\" height=\\\"16px\\\" id=\\\"\\u0421\\u043B\\u043E\\u0439_1\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 32 32\\\" width=\\\"16px\\\" xml:space=\\\"preserve\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><path d=\\\"M24.285,11.284L16,19.571l-8.285-8.288c-0.395-0.395-1.034-0.395-1.429,0  c-0.394,0.395-0.394,1.035,0,1.43l8.999,9.002l0,0l0,0c0.394,0.395,1.034,0.395,1.428,0l8.999-9.002  c0.394-0.395,0.394-1.036,0-1.431C25.319,10.889,24.679,10.889,24.285,11.284z\\\" fill=\\\"#121313\\\" id=\\\"Expand_More\\\"/><g/><g/><g/><g/><g/><g/></svg>\\n    </span>\\n</button>\\n\", styles: [\".ng2-dropdown-button{font-family:Roboto,Helvetica Neue,Helvetica,Arial;background:#fff;padding:.45rem .25rem;font-size:14px;letter-spacing:.08rem;color:#444;outline:0;cursor:pointer;font-weight:400;border:none;border-bottom:1px solid #efefef;text-align:left;min-width:100px;width:100%;display:flex;flex-direction:row;max-width:150px}.ng2-dropdown-button:hover{color:#222}.ng2-dropdown-button:active,.ng2-dropdown-button:focus{color:#222;border-bottom:2px solid #2196F3}.ng2-dropdown-button__label{flex:1 1 95%}.ng2-dropdown-button__caret{width:12px;height:12px;display:flex;flex:1 1 6%}:host-context(.ng2-dropdown-button--icon) .ng2-dropdown-button{border:none;min-width:40px;width:40px;border-radius:100%;transition:all .2s;text-align:center;height:40px;padding:.5em}:host-context(.ng2-dropdown-button--icon) .ng2-dropdown-button:active{background:rgba(0,0,0,.2)}\\n\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2DropdownButton, decorators: [{\n            type: Component,\n            args: [{ selector: 'ng2-dropdown-button', template: \"<button class='ng2-dropdown-button' type=\\\"button\\\" (click)=\\\"toggleMenu()\\\" tabindex=\\\"0s\\\">\\n    <span class=\\\"ng2-dropdown-button__label\\\">\\n        <ng-content></ng-content>\\n    </span>\\n\\n    <span class=\\\"ng2-dropdown-button__caret\\\" *ngIf=\\\"showCaret\\\">\\n        <svg enable-background=\\\"new 0 0 32 32\\\" height=\\\"16px\\\" id=\\\"\\u0421\\u043B\\u043E\\u0439_1\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 32 32\\\" width=\\\"16px\\\" xml:space=\\\"preserve\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><path d=\\\"M24.285,11.284L16,19.571l-8.285-8.288c-0.395-0.395-1.034-0.395-1.429,0  c-0.394,0.395-0.394,1.035,0,1.43l8.999,9.002l0,0l0,0c0.394,0.395,1.034,0.395,1.428,0l8.999-9.002  c0.394-0.395,0.394-1.036,0-1.431C25.319,10.889,24.679,10.889,24.285,11.284z\\\" fill=\\\"#121313\\\" id=\\\"Expand_More\\\"/><g/><g/><g/><g/><g/><g/></svg>\\n    </span>\\n</button>\\n\", styles: [\".ng2-dropdown-button{font-family:Roboto,Helvetica Neue,Helvetica,Arial;background:#fff;padding:.45rem .25rem;font-size:14px;letter-spacing:.08rem;color:#444;outline:0;cursor:pointer;font-weight:400;border:none;border-bottom:1px solid #efefef;text-align:left;min-width:100px;width:100%;display:flex;flex-direction:row;max-width:150px}.ng2-dropdown-button:hover{color:#222}.ng2-dropdown-button:active,.ng2-dropdown-button:focus{color:#222;border-bottom:2px solid #2196F3}.ng2-dropdown-button__label{flex:1 1 95%}.ng2-dropdown-button__caret{width:12px;height:12px;display:flex;flex:1 1 6%}:host-context(.ng2-dropdown-button--icon) .ng2-dropdown-button{border:none;min-width:40px;width:40px;border-radius:100%;transition:all .2s;text-align:center;height:40px;padding:.5em}:host-context(.ng2-dropdown-button--icon) .ng2-dropdown-button:active{background:rgba(0,0,0,.2)}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { onMenuToggled: [{\n                type: Output\n            }], showCaret: [{\n                type: Input\n            }] } });\n\nconst KEYS = {\n    BACKSPACE: 9,\n    PREV: 38,\n    NEXT: 40,\n    ENTER: 13,\n    ESCAPE: 27\n};\n/**\n * @name onSwitchNext\n * @param index\n * @param items\n * @param state\n */\nconst onSwitchNext = (index, items, state) => {\n    if (index < items.length - 1) {\n        state.select(items[index + 1], true);\n    }\n};\n/**\n * @name onSwitchPrev\n * @param index\n * @param items\n * @param state\n */\nconst onSwitchPrev = (index, items, state) => {\n    if (index > 0) {\n        state.select(items[index - 1], true);\n    }\n};\n/**\n * @name onBackspace\n * @param index\n * @param items\n * @param state\n */\nconst onBackspace = (index, items, state) => {\n    if (index < items.length - 1) {\n        state.select(items[index + 1], true);\n    }\n    else {\n        state.select(items[0], true);\n    }\n};\nfunction onEscape() {\n    this.hide();\n}\n;\n/**\n * @name onItemClicked\n * @param index\n * @param items\n * @param state\n */\nconst onItemClicked = (index, items, state) => {\n    return state.selectedItem ? state.selectedItem.click() : undefined;\n};\nconst ACTIONS = {\n    [KEYS.BACKSPACE]: onBackspace,\n    [KEYS.PREV]: onSwitchPrev,\n    [KEYS.NEXT]: onSwitchNext,\n    [KEYS.ENTER]: onItemClicked,\n    [KEYS.ESCAPE]: onEscape\n};\nfunction arrowKeysHandler(event) {\n    if ([38, 40].indexOf(event.keyCode) > -1) {\n        event.preventDefault();\n    }\n}\n\nclass Ng2DropdownState {\n    constructor() {\n        this.onItemSelected = new EventEmitter();\n        this.onItemClicked = new EventEmitter();\n        this.onItemDestroyed = new EventEmitter();\n    }\n    /**\n     * @name selectedItem\n     * @desc getter for _selectedItem\n     */\n    get selectedItem() {\n        return this._selectedItem;\n    }\n    /**\n     * @name selects a menu item and emits event\n     * @param item\n     */\n    select(item, dispatchEvent = true) {\n        this._selectedItem = item;\n        if (!dispatchEvent || !item) {\n            return;\n        }\n        item.focus();\n        this.onItemSelected.emit(item);\n    }\n    /**\n     * @name unselect\n     * @desc sets _selectedItem as undefined\n     */\n    unselect() {\n        this._selectedItem = undefined;\n    }\n}\n\nclass DropdownStateService {\n    constructor() {\n        this.menuState = {\n            isVisible: false,\n            toString() {\n                return this.isVisible === true ? 'visible' : 'hidden';\n            }\n        };\n        this.dropdownState = new Ng2DropdownState();\n    }\n}\nDropdownStateService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DropdownStateService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDropdownStateService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DropdownStateService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DropdownStateService, decorators: [{\n            type: Injectable\n        }] });\n\nclass Ng2MenuItem {\n    constructor(state, element) {\n        this.state = state;\n        this.element = element;\n        /**\n         * @preventClose\n         * @desc if true, clicking on the item won't close the dropdown\n         */\n        this.preventClose = false;\n    }\n    ngOnDestroy() {\n        this.state.dropdownState.onItemDestroyed.emit(this);\n    }\n    /**\n     * @name isSelected\n     * @desc returns current selected item\n     */\n    get isSelected() {\n        return this === this.state.dropdownState.selectedItem;\n    }\n    /**\n     * @name click\n     * @desc emits select event\n     */\n    select($event) {\n        this.state.dropdownState.select(this, true);\n        if ($event) {\n            $event.stopPropagation();\n            $event.preventDefault();\n        }\n    }\n    /**\n     * @name click\n     * @desc emits click event\n     */\n    click() {\n        this.state.dropdownState.onItemClicked.emit(this);\n    }\n    /**\n     * @name focus\n     */\n    focus() {\n        this.element.nativeElement.children[0].focus();\n    }\n}\nNg2MenuItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2MenuItem, deps: [{ token: DropdownStateService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nNg2MenuItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: Ng2MenuItem, selector: \"ng2-menu-item\", inputs: { preventClose: \"preventClose\", value: \"value\" }, ngImport: i0, template: `\n        <div\n            class=\"ng2-menu-item\"\n            role=\"button\"\n            tabindex=\"0\"\n            [class.ng2-menu-item--selected]=\"isSelected\"\n            (keydown.enter)=\"click()\"\n            (click)=\"click()\"\n            (mouseover)=\"select()\"\n        >\n            <ng-content></ng-content>\n        </div>\n    `, isInline: true, styles: [\".ng2-menu-item{font-family:Roboto,Helvetica Neue,Helvetica,Arial;background:#fff;color:#000000de;cursor:pointer;font-size:.9em;text-transform:none;font-weight:400;letter-spacing:.03em;height:48px;line-height:48px;padding:.3em 1.25rem;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;transition:background .25s}.ng2-menu-item--selected{background:rgba(158,158,158,.2);outline:0}.ng2-menu-item:focus{outline:0}.ng2-menu-item:active{background:rgba(158,158,158,.4)}:host(ng2-menu-item) ::ng-deep [ng2-menu-item-icon]{vertical-align:middle;font-size:28px;width:1.5em;height:30px;color:#00000070}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2MenuItem, decorators: [{\n            type: Component,\n            args: [{ selector: 'ng2-menu-item', template: `\n        <div\n            class=\"ng2-menu-item\"\n            role=\"button\"\n            tabindex=\"0\"\n            [class.ng2-menu-item--selected]=\"isSelected\"\n            (keydown.enter)=\"click()\"\n            (click)=\"click()\"\n            (mouseover)=\"select()\"\n        >\n            <ng-content></ng-content>\n        </div>\n    `, styles: [\".ng2-menu-item{font-family:Roboto,Helvetica Neue,Helvetica,Arial;background:#fff;color:#000000de;cursor:pointer;font-size:.9em;text-transform:none;font-weight:400;letter-spacing:.03em;height:48px;line-height:48px;padding:.3em 1.25rem;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;transition:background .25s}.ng2-menu-item--selected{background:rgba(158,158,158,.2);outline:0}.ng2-menu-item:focus{outline:0}.ng2-menu-item:active{background:rgba(158,158,158,.4)}:host(ng2-menu-item) ::ng-deep [ng2-menu-item-icon]{vertical-align:middle;font-size:28px;width:1.5em;height:30px;color:#00000070}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: DropdownStateService }, { type: i0.ElementRef }]; }, propDecorators: { preventClose: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }] } });\n\nclass Ng2DropdownMenu {\n    constructor(dropdownState, element, renderer) {\n        this.dropdownState = dropdownState;\n        this.element = element;\n        this.renderer = renderer;\n        /**\n         * @name width\n         */\n        this.width = 4;\n        /**\n         * @description if set to true, the first element of the dropdown will be automatically focused\n         * @name focusFirstElement\n         */\n        this.focusFirstElement = true;\n        /**\n         * @name appendToBody\n         */\n        this.appendToBody = true;\n        /**\n         * @name zIndex\n         */\n        this.zIndex = 1000;\n        this.listeners = {\n            arrowHandler: undefined,\n            handleKeypress: undefined\n        };\n    }\n    /**\n     * @name show\n     * @shows menu and selects first item\n     */\n    show(position, dynamic = true) {\n        const dc = typeof document !== 'undefined' ? document : undefined;\n        const wd = typeof window !== 'undefined' ? window : undefined;\n        if (!this.dropdownState.menuState.isVisible) {\n            // setting handlers\n            this.listeners.handleKeypress = this.renderer.listen(dc.body, 'keydown', this.handleKeypress.bind(this));\n            this.listeners.arrowHandler = this.renderer.listen(wd, 'keydown', arrowKeysHandler);\n        }\n        // update state\n        this.dropdownState.menuState.isVisible = true;\n        if (position) {\n            this.updatePosition(position, dynamic);\n        }\n    }\n    /**\n     * @name hide\n     * @desc hides menu\n     */\n    hide() {\n        this.dropdownState.menuState.isVisible = false;\n        // reset selected item state\n        this.dropdownState.dropdownState.unselect();\n        // call function to unlisten\n        this.listeners.arrowHandler && this.listeners.arrowHandler();\n        this.listeners.handleKeypress && this.listeners.handleKeypress();\n    }\n    /**\n     * @name updatePosition\n     * @desc updates the menu position every time it is toggled\n     * @param position {ClientRect}\n     * @param dynamic {boolean}\n     */\n    updatePosition(position, dynamic) {\n        this.position = position;\n        this.updateOnChange(dynamic);\n    }\n    /**\n     * @name handleKeypress\n     * @desc executes functions on keyPress based on the key pressed\n     * @param $event\n     */\n    handleKeypress($event) {\n        const key = $event.keyCode;\n        const items = this.items.toArray();\n        const index = items.indexOf(this.dropdownState.dropdownState.selectedItem);\n        if (!ACTIONS.hasOwnProperty(key)) {\n            return;\n        }\n        ACTIONS[key].call(this, index, items, this.dropdownState.dropdownState);\n    }\n    /**\n     * @name getMenuElement\n     */\n    getMenuElement() {\n        return this.element.nativeElement.children[0];\n    }\n    /**\n     * @name calcPositionOffset\n     * @param position\n     */\n    calcPositionOffset(position) {\n        const wd = typeof window !== 'undefined' ? window : undefined;\n        const dc = typeof document !== 'undefined' ? document : undefined;\n        if (!wd || !dc || !position) {\n            return;\n        }\n        const element = this.getMenuElement();\n        const supportPageOffset = wd.pageXOffset !== undefined;\n        const isCSS1Compat = (dc.compatMode || '') === 'CSS1Compat';\n        const x = supportPageOffset\n            ? wd.pageXOffset\n            : isCSS1Compat\n                ? dc.documentElement.scrollLeft\n                : dc.body.scrollLeft;\n        const y = supportPageOffset\n            ? wd.pageYOffset\n            : isCSS1Compat\n                ? dc.documentElement.scrollTop\n                : dc.body.scrollTop;\n        let { top, left } = this.applyOffset(`${position.top + (this.appendToBody ? y - 15 : 0)}px`, `${position.left + x - 5}px`);\n        const clientWidth = element.clientWidth;\n        const clientHeight = element.clientHeight;\n        const marginFromBottom = parseInt(top) + clientHeight + (this.appendToBody ? 0 : y - 15);\n        const marginFromRight = parseInt(left) + clientWidth;\n        const windowScrollHeight = wd.innerHeight + wd.scrollY;\n        const windowScrollWidth = wd.innerWidth + wd.scrollX;\n        if (marginFromBottom >= windowScrollHeight) {\n            top = `${parseInt(top.replace('px', '')) - clientHeight}px`;\n        }\n        if (marginFromRight >= windowScrollWidth) {\n            const marginRight = marginFromRight - windowScrollWidth + 30;\n            left = `${parseInt(left.replace('px', '')) - marginRight}px`;\n        }\n        return { top, left };\n    }\n    applyOffset(top, left) {\n        if (!this.offset) {\n            return { top, left };\n        }\n        const offset = this.offset.split(' ');\n        if (!offset[1]) {\n            offset[1] = '0';\n        }\n        top = `${parseInt(top.replace('px', '')) + parseInt(offset[0])}px`;\n        left = `${parseInt(left.replace('px', '')) + parseInt(offset[1])}px`;\n        return { top, left };\n    }\n    ngOnInit() {\n        const dc = typeof document !== 'undefined' ? document : undefined;\n        if (this.appendToBody) {\n            // append menu element to the body\n            dc.body.appendChild(this.element.nativeElement);\n        }\n    }\n    updateOnChange(dynamic = true) {\n        const element = this.getMenuElement();\n        const position = this.calcPositionOffset(this.position);\n        if (position) {\n            this.renderer.setStyle(element, 'top', position.top.toString());\n            this.renderer.setStyle(element, 'left', position.left.toString());\n        }\n        // select first item unless user disabled this option\n        if (this.focusFirstElement &&\n            this.items.first &&\n            !this.dropdownState.dropdownState.selectedItem) {\n            this.dropdownState.dropdownState.select(this.items.first, false);\n        }\n    }\n    ngOnDestroy() {\n        const elem = this.element.nativeElement;\n        elem.parentNode.removeChild(elem);\n        if (this.listeners.handleKeypress) {\n            this.listeners.handleKeypress();\n        }\n    }\n}\nNg2DropdownMenu.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2DropdownMenu, deps: [{ token: DropdownStateService }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\nNg2DropdownMenu.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: Ng2DropdownMenu, selector: \"ng2-dropdown-menu\", inputs: { width: \"width\", focusFirstElement: \"focusFirstElement\", offset: \"offset\", appendToBody: \"appendToBody\", zIndex: \"zIndex\" }, queries: [{ propertyName: \"items\", predicate: Ng2MenuItem, descendants: true }], ngImport: i0, template: `\n        <!-- MENU -->\n        <div\n            class=\"ng2-dropdown-menu ng2-dropdown-menu---width--{{ width }}\"\n            [class.ng2-dropdown-menu--inside-element]=\"!appendToBody\"\n            [class.ng2-dropdown-menu--open]=\"dropdownState.menuState.isVisible\"\n            [style.z-index]=\"zIndex\"\n            [@fade]=\"dropdownState.menuState.toString()\"\n        >\n            <div\n                class=\"ng2-dropdown-menu__options-container\"\n                [@opacity]=\"dropdownState.menuState.toString()\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n\n        <!-- BACKDROP -->\n        <div\n            class=\"ng2-dropdown-backdrop\"\n            *ngIf=\"dropdownState.menuState.isVisible\"\n            (click)=\"hide()\"\n        ></div>\n    `, isInline: true, styles: [\":host{display:block}.ng2-dropdown-menu{overflow-y:auto;box-shadow:0 1px 2px #0000004d;position:absolute;padding:.5em 0;background:#fff;border-radius:1px;max-height:400px;width:260px;min-height:0;display:block}.ng2-dropdown-menu.ng2-dropdown-menu--inside-element{position:fixed}.ng2-dropdown-menu.ng2-dropdown-menu--width--2{width:200px}.ng2-dropdown-menu.ng2-dropdown-menu--width--4{width:260px}.ng2-dropdown-menu.ng2-dropdown-menu--width--6{width:320px}.ng2-dropdown-backdrop{position:fixed;top:0;left:0;width:100%;height:100%;z-index:1;overflow:hidden}:host ::ng-deep .ng2-menu-divider{height:1px;min-height:1px;max-height:1px;width:100%;display:block;background:#f9f9f9}\\n\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        trigger('fade', [\n            state('visible', style({ opacity: 1, height: '*', width: '*' })),\n            state('hidden', style({ opacity: 0, overflow: 'hidden', height: 0, width: 0 })),\n            transition('hidden => visible', [\n                animate('250ms ease-in', style({ opacity: 1, height: '*', width: '*' }))\n            ]),\n            transition('visible => hidden', [\n                animate('350ms ease-out', style({ opacity: 0, width: 0, height: 0 }))\n            ])\n        ]),\n        trigger('opacity', [\n            transition('hidden => visible', [\n                animate('450ms ease-in', keyframes([\n                    style({ opacity: 0, offset: 0 }),\n                    style({ opacity: 1, offset: 1 })\n                ]))\n            ]),\n            transition('visible => hidden', [\n                animate('250ms ease-out', keyframes([\n                    style({ opacity: 1, offset: 0 }),\n                    style({ opacity: 0.5, offset: 0.3 }),\n                    style({ opacity: 0, offset: 1 })\n                ]))\n            ])\n        ])\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2DropdownMenu, decorators: [{\n            type: Component,\n            args: [{ selector: 'ng2-dropdown-menu', template: `\n        <!-- MENU -->\n        <div\n            class=\"ng2-dropdown-menu ng2-dropdown-menu---width--{{ width }}\"\n            [class.ng2-dropdown-menu--inside-element]=\"!appendToBody\"\n            [class.ng2-dropdown-menu--open]=\"dropdownState.menuState.isVisible\"\n            [style.z-index]=\"zIndex\"\n            [@fade]=\"dropdownState.menuState.toString()\"\n        >\n            <div\n                class=\"ng2-dropdown-menu__options-container\"\n                [@opacity]=\"dropdownState.menuState.toString()\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n\n        <!-- BACKDROP -->\n        <div\n            class=\"ng2-dropdown-backdrop\"\n            *ngIf=\"dropdownState.menuState.isVisible\"\n            (click)=\"hide()\"\n        ></div>\n    `, animations: [\n                        trigger('fade', [\n                            state('visible', style({ opacity: 1, height: '*', width: '*' })),\n                            state('hidden', style({ opacity: 0, overflow: 'hidden', height: 0, width: 0 })),\n                            transition('hidden => visible', [\n                                animate('250ms ease-in', style({ opacity: 1, height: '*', width: '*' }))\n                            ]),\n                            transition('visible => hidden', [\n                                animate('350ms ease-out', style({ opacity: 0, width: 0, height: 0 }))\n                            ])\n                        ]),\n                        trigger('opacity', [\n                            transition('hidden => visible', [\n                                animate('450ms ease-in', keyframes([\n                                    style({ opacity: 0, offset: 0 }),\n                                    style({ opacity: 1, offset: 1 })\n                                ]))\n                            ]),\n                            transition('visible => hidden', [\n                                animate('250ms ease-out', keyframes([\n                                    style({ opacity: 1, offset: 0 }),\n                                    style({ opacity: 0.5, offset: 0.3 }),\n                                    style({ opacity: 0, offset: 1 })\n                                ]))\n                            ])\n                        ])\n                    ], styles: [\":host{display:block}.ng2-dropdown-menu{overflow-y:auto;box-shadow:0 1px 2px #0000004d;position:absolute;padding:.5em 0;background:#fff;border-radius:1px;max-height:400px;width:260px;min-height:0;display:block}.ng2-dropdown-menu.ng2-dropdown-menu--inside-element{position:fixed}.ng2-dropdown-menu.ng2-dropdown-menu--width--2{width:200px}.ng2-dropdown-menu.ng2-dropdown-menu--width--4{width:260px}.ng2-dropdown-menu.ng2-dropdown-menu--width--6{width:320px}.ng2-dropdown-backdrop{position:fixed;top:0;left:0;width:100%;height:100%;z-index:1;overflow:hidden}:host ::ng-deep .ng2-menu-divider{height:1px;min-height:1px;max-height:1px;width:100%;display:block;background:#f9f9f9}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: DropdownStateService }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { width: [{\n                type: Input\n            }], focusFirstElement: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], appendToBody: [{\n                type: Input\n            }], zIndex: [{\n                type: Input\n            }], items: [{\n                type: ContentChildren,\n                args: [Ng2MenuItem, { descendants: true }]\n            }] } });\n\nclass Ng2Dropdown {\n    constructor(state) {\n        this.state = state;\n        this.dynamicUpdate = true;\n        // outputs\n        this.onItemClicked = new EventEmitter();\n        this.onItemSelected = new EventEmitter();\n        this.onShow = new EventEmitter();\n        this.onHide = new EventEmitter();\n    }\n    ngOnInit() {\n        this.state.dropdownState.onItemClicked.subscribe(item => {\n            this.onItemClicked.emit(item);\n            if (item.preventClose) {\n                return;\n            }\n            this.hide.call(this);\n        });\n        if (this.button) {\n            this.button.onMenuToggled.subscribe(() => {\n                this.toggleMenu();\n            });\n        }\n        this.state.dropdownState.onItemSelected.subscribe(item => {\n            this.onItemSelected.emit(item);\n        });\n        this.state.dropdownState.onItemDestroyed.subscribe((item) => {\n            let newSelectedItem;\n            const items = this.menu.items.toArray();\n            if (item !== this.state.dropdownState.selectedItem) {\n                return;\n            }\n            if (this.menu.focusFirstElement) {\n                newSelectedItem =\n                    item === items[0] && items.length > 1\n                        ? items[1]\n                        : items[0];\n            }\n            this.state.dropdownState.select(newSelectedItem);\n        });\n    }\n    /**\n     * @name toggleMenu\n     * @desc toggles menu visibility\n     */\n    toggleMenu(position = this.button.getPosition()) {\n        this.state.menuState.isVisible ? this.hide() : this.show(position);\n    }\n    /**\n     * - hides dropdown\n     * @name hide\n     */\n    hide() {\n        this.menu.hide();\n        this.onHide.emit(this);\n    }\n    /**\n     * - shows dropdown\n     * @name show\n     * @param position\n     */\n    show(position = this.button.getPosition()) {\n        this.menu.show(position, this.dynamicUpdate);\n        this.onShow.emit(this);\n    }\n    /**\n     * @name scrollListener\n     */\n    scrollListener() {\n        if (this.button && this.dynamicUpdate) {\n            this.menu.updatePosition(this.button.getPosition(), true);\n        }\n    }\n}\nNg2Dropdown.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2Dropdown, deps: [{ token: DropdownStateService }], target: i0.ɵɵFactoryTarget.Component });\nNg2Dropdown.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: Ng2Dropdown, selector: \"ng2-dropdown\", inputs: { dynamicUpdate: \"dynamicUpdate\" }, outputs: { onItemClicked: \"onItemClicked\", onItemSelected: \"onItemSelected\", onShow: \"onShow\", onHide: \"onHide\" }, host: { listeners: { \"window:scroll\": \"scrollListener()\" } }, providers: [DropdownStateService], queries: [{ propertyName: \"button\", first: true, predicate: Ng2DropdownButton, descendants: true, static: true }, { propertyName: \"menu\", first: true, predicate: Ng2DropdownMenu, descendants: true, static: true }], ngImport: i0, template: `\n        <div class=\"ng2-dropdown-container\">\n            <ng-content select=\"ng2-dropdown-button\"></ng-content>\n            <ng-content select=\"ng2-dropdown-menu\"></ng-content>\n        </div>\n    `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2Dropdown, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ng2-dropdown',\n                    template: `\n        <div class=\"ng2-dropdown-container\">\n            <ng-content select=\"ng2-dropdown-button\"></ng-content>\n            <ng-content select=\"ng2-dropdown-menu\"></ng-content>\n        </div>\n    `,\n                    providers: [DropdownStateService]\n                }]\n        }], ctorParameters: function () { return [{ type: DropdownStateService }]; }, propDecorators: { button: [{\n                type: ContentChild,\n                args: [Ng2DropdownButton, { static: true }]\n            }], menu: [{\n                type: ContentChild,\n                args: [Ng2DropdownMenu, { static: true }]\n            }], dynamicUpdate: [{\n                type: Input\n            }], onItemClicked: [{\n                type: Output\n            }], onItemSelected: [{\n                type: Output\n            }], onShow: [{\n                type: Output\n            }], onHide: [{\n                type: Output\n            }], scrollListener: [{\n                type: HostListener,\n                args: ['window:scroll']\n            }] } });\n\nclass Ng2DropdownModule {\n}\nNg2DropdownModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2DropdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNg2DropdownModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2DropdownModule, declarations: [Ng2Dropdown,\n        Ng2MenuItem,\n        Ng2DropdownButton,\n        Ng2DropdownMenu], imports: [CommonModule], exports: [Ng2MenuItem,\n        Ng2DropdownButton,\n        Ng2DropdownMenu,\n        Ng2Dropdown] });\nNg2DropdownModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2DropdownModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Ng2DropdownModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [\n                        Ng2MenuItem,\n                        Ng2DropdownButton,\n                        Ng2DropdownMenu,\n                        Ng2Dropdown\n                    ],\n                    declarations: [\n                        Ng2Dropdown,\n                        Ng2MenuItem,\n                        Ng2DropdownButton,\n                        Ng2DropdownMenu,\n                    ],\n                    imports: [\n                        CommonModule\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DropdownStateService, Ng2Dropdown, Ng2DropdownButton, Ng2DropdownMenu, Ng2DropdownModule, Ng2MenuItem };\n"]},"metadata":{},"sourceType":"module"}